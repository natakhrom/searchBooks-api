{"version":3,"sources":["Search/Search.js","Headers/Header.js","utils/BooksApi.js","BookCard/BookCard.js","BooksList/BooksList.js","Spinner/Spinner.js","images/noCover.jpg","AboutBook/AboutBook.js","App/App.js","reportWebVitals.js","index.js"],"names":["Search","props","React","useState","query","setQuery","className","onSubmit","e","preventDefault","name","defaultValue","onChange","target","value","type","onCategoryChange","onChangeSorting","Header","handleSubmit","handleCategoryChange","api","baseUrl","apiKey","this","_baseUrl","_apiKey","category","startIndex","maxResult","categoryParam","url","fetch","then","res","ok","json","Promise","reject","status","BookCard","book","handleClick","to","onClick","src","link","alt","title","authors","BooksList","books","totalItems","isBookList","sortByDate","sortedBooks","setSortedBooks","useEffect","booksToSort","sort","book1","book2","publishedDate","localeCompare","map","id","Spinner","AboutBook","history","useHistory","description","goBack","App","setBooks","setTotalItems","setCategory","isLoading","setIsLoading","selectedBook","setSelectedBook","setStartIndex","setIsBookList","setSortByDate","getBooks","addToExisting","data","newBooks","items","item","volumeInfo","imageLinks","smallThumbnail","noCover","categories","join","exact","path","newStartIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d74d49aa.chunk.js","sourcesContent":["import React from 'react';\nimport './Search.css';\n\nfunction Search(props) {\n    const [query, setQuery] = React.useState('');\n\n    function handleQueryChange(e) {\n        setQuery(e.target.value);\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n        props.onSubmit(query);\n    }\n\n    function handleCategoryChange(e) {\n        props.onCategoryChange(e.target.value);\n    }\n\n    function handleChangeSorting(e) {\n        props.onChangeSorting(e.target.value === 'relevance'\n                                ? false : true);\n    }\n\n    return (\n        <form className=\"search__form\" onSubmit={onSubmit}>\n            <div className=\"search__row\">\n                <input className=\"search__input\" name=\"search\" defaultValue=\"\" onChange={handleQueryChange}></input>\n                <button className=\"search__button\" type=\"submit\"></button>\n            </div>\n            <div className=\"search__param\">\n                <label className=\"search__description\">Categories\n                    <select className=\"search__select\" onChange={handleCategoryChange}>\n                        <option value=\"all\">all</option>\n                        <option value=\"art\">art</option>\n                        <option value=\"biography\">biography</option>\n                        <option value=\"computers\">computers</option>\n                        <option value=\"history\">history</option>\n                        <option value=\"medical\">medical</option>\n                        <option value=\"poetry\">poetry</option>\n                </select>\n                </label>\n                <label className=\"search__description\">Sorting by\n                    <select className=\"search__select\" onChange={handleChangeSorting}>\n                        <option>relevance</option>\n                        <option>newest</option>\n                    </select>\n                </label>\n            </div>\n        </form>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport './Header.css';\nimport Search from '../Search/Search';\n\nfunction Header({ handleSubmit, handleCategoryChange, onChangeSorting }) {\n    return (\n        <header className=\"header\">\n            <h1 className=\"header__heading\">Search for books</h1>\n            <Search onSubmit={handleSubmit} onCategoryChange={handleCategoryChange} onChangeSorting={onChangeSorting} />\n        </header>\n    )\n}\n\nexport default Header;","class BooksApi {\n    constructor({ baseUrl, apiKey}) {\n        this._baseUrl = baseUrl;\n        this._apiKey = apiKey;\n    } \n\n    getBooks(query, category, startIndex, maxResult) {\n        const categoryParam = category === 'all'\n            ? '' : `+subject:${category}`;    \n\n        const url = `${this._baseUrl}/v1/volumes?q=${query}${categoryParam}&startIndex=${startIndex}&maxResults=${maxResult}&key=${this._apiKey}`;\n\n\n        return fetch(url)\n            .then(res => {\n                if(res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status}`);\n            })\n    }\n}\n\nconst api = new BooksApi({\n    baseUrl: 'https://www.googleapis.com/books',\n    apiKey: 'AIzaSyDOLzKhavchXJwQxGwzn9ssVWn0R8IQicE',\n})\n\nexport default api;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './BookCard.css'\n\nfunction BookCard({ book, handleClick }) {\n    \n    function onClick() {\n        handleClick(book);\n    }\n\n    return(\n        <Link to=\"/about-book\">\n            <div className=\"book__container\" onClick={onClick} >\n                <img src={book.link} alt={book.alt} className=\"book__image\" />\n                <p className=\"book__category\">{book.category}</p>\n                <h2 className=\"book__title\">{book.title}</h2>\n                <p className=\"book__author\">{book.authors}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default BookCard;","import React from 'react';\nimport './BooksList.css';\nimport BookCard from '../BookCard/BookCard';\n\nfunction BooksList({ books, totalItems, onClick, handleClick, isBookList, sortByDate }) {\n    const [sortedBooks, setSortedBooks] = React.useState([]);\n\n\n    // Сортировка книг по дате;\n    React.useEffect(() => {\n        function sort() {\n            if (!sortByDate) {\n                setSortedBooks(books);\n            } else {\n                let booksToSort = [...books];\n                booksToSort.sort((book1, book2) => {\n                    return book2.publishedDate.localeCompare(book1.publishedDate);\n                });\n                setSortedBooks(booksToSort);\n            }\n        }\n\n        sort();\n\n    }, [books, sortByDate])\n\n    return(\n        <section className=\"booksList\">\n            <p className=\"booksList__text\">Found {totalItems} results</p>\n            <div className=\"booksList__grid\">\n                {sortedBooks.map(book => \n                <BookCard key={book.id} id={book.id} book={book} handleClick={handleClick}  />\n                )}\n            </div>\n            <button type=\"button\" className={isBookList ? 'booksList__buttonLoadMore' : 'booksList__buttonLoadMore_hidden'} onClick={onClick}>Load More</button>\n        </section>\n    )\n}\n\nexport default BooksList;","import './Spinner.css'\n\nfunction Spinner() {\n    return(\n        <div className=\"spinner\"></div>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/noCover.b6c09a7e.jpg\";","import { useHistory } from 'react-router';\nimport './AboutBook.css'\n\nfunction AboutBook({ book }) {\n    const history = useHistory();\n\n    return(\n        <>\n        <div className=\"book\">\n            <img src={book.link} alt={book.alt} className=\"book__foto\" />\n            <div className=\"book__info\">\n                <p className=\"book__category_type_bigSize\">{book.category}</p>\n                <h2 className=\"book__title_type_bigSize\">{book.title}</h2>\n                <p className=\"book__authors_type_bigSize\">{book.authors}</p>\n                <div className=\"border\">\n                    <p className=\"book__description_type_bigSize\">{book.description}</p>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" className=\"book__button-goBack\" onClick={() => history.goBack()}>Назад</button>\n        </>\n    )\n}\n\nexport default AboutBook;","import React from 'react';\nimport './App.css';\nimport Header from '../Headers/Header';\nimport api from '../utils/BooksApi';\nimport BooksList from '../BooksList/BooksList';\nimport Spinner from '../Spinner/Spinner';\nimport noCover from '../images/noCover.jpg'\nimport AboutBook from '../AboutBook/AboutBook';\nimport { Route, Switch } from 'react-router';\n\n\nfunction App() {\n  const [books, setBooks] = React.useState([]);\n  const [totalItems, setTotalItems] = React.useState(0);\n  const [category, setCategory] = React.useState('all');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedBook, setSelectedBook] = React.useState({});\n  const [startIndex, setStartIndex] = React.useState(0);\n  const [query, setQuery] = React.useState('');\n  const [isBookList, setIsBookList] = React.useState(false);\n  const [sortByDate, setSortByDate] = React.useState(false);\n  //количество загружаемых книг за шаг пагинации;\n  const maxResult = 5;\n\n  // фенкция загрузки книг с Google Books APIs\n  function getBooks(query, category, startIndex, maxResult, addToExisting)\n  {\n    api.getBooks(query, category, startIndex, maxResult)\n      .then((data) => {\n      setTotalItems(data.totalItems);\n      const newBooks = data.items.map(item => ({\n        id: item.id,\n        link: item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.smallThumbnail : noCover,\n        alt: `Картинка к книге \"${item.volumeInfo.title}\"`,\n        title: item.volumeInfo.title, \n        category: item.volumeInfo.categories, \n        authors: item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : '',\n        description: item.volumeInfo.description,\n        publishedDate: item.volumeInfo.publishedDate ? item.volumeInfo.publishedDate : '1900-01-01'\n      }));\n      // подгрузка книг к уже сущестующему массиву по кнопке LoadMore;\n      if (addToExisting) {\n        setBooks(books => [...books, ...newBooks]);\n      } else {\n        setBooks(newBooks);\n      }\n      setIsLoading(false);\n    });\n  }\n\n  // сортировка книг по дате;\n  function handleChangeSorting(sortByDate) {\n    setSortByDate(sortByDate);\n  }\n\n  // загрузка книг по нажатию на поиск и Enter;\n  function handleSubmit(query) {\n    setQuery(query);\n    setIsLoading(true);\n    getBooks(query, category, startIndex, maxResult, false);\n    setIsBookList(true);\n  }\n\n  // выбор книги по категории из выпадающего списка;\n  function handleCategoryChange(category) {\n    setCategory(category);\n  }\n\n  // загрузить еще книги с шагом пагинации = 5;\n  function handleClickOnButtonLoadMore() {\n    const newStartIndex = startIndex + 1 * maxResult;\n    getBooks(query, category, newStartIndex, maxResult, true);\n    setStartIndex(newStartIndex);\n  }\n\n  // крткое описание выбранной книги;\n  function handleBookClick(book) {\n    setSelectedBook(book);\n  }\n\n  return (\n    <div className=\"page\">\n        <Header handleSubmit={handleSubmit} handleCategoryChange={handleCategoryChange} onChangeSorting={handleChangeSorting} />\n        <Switch>\n        {isLoading ? \n          <Spinner /> : \n          <Route exact path=\"/\">\n            <BooksList books={books} totalItems={totalItems} onClick={handleClickOnButtonLoadMore} handleClick={handleBookClick} isBookList={isBookList} sortByDate={sortByDate} />\n          </Route>}\n        <Route path=\"/about-book\">\n            <AboutBook book={selectedBook}/>\n        </Route> \n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}